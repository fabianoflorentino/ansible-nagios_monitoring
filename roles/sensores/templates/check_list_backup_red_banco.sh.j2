{% raw -%}
#!/bin/sh
{% endraw -%}
# {{ansible_managed}}
BASE={{item}}

DIR_BACKUP_RED="{{plugin_bkp_banco_dir_red}}"
{% if type_plugin == 'true' %}
QUANTIDADE_BACKUP=$(ls ${DIR_BACKUP_RED} |grep -i ${BASE} | wc -l)

LISTAR=$(ls -tr ${DIR_BACKUP_RED} | grep backup_db*${BASE}* | tail -n 10 | xargs -d'\n')
{% else %}
QUANTIDADE_BACKUP=$(ls ${DIR_BACKUP_RED} | wc -l)

LISTAR=$(ls -tr ${DIR_BACKUP_RED} | grep backup_db | tail -n 10 | xargs -d'\n')
{% endif %}

{% if type_plugin == 'true' %}
BACKUP=$(find ${DIR_BACKUP_RED} -maxdepth 1 -name "b*${BASE}*.tar.z" -mtime -3 | wc -l)
{% else %}
BACKUP=$(find ${DIR_BACKUP_RED} -maxdepth 1 -name "b*.tar.z" -mtime -3 | wc -l)
{% endif %}
{% raw %}
        if [ $BACKUP -ge 2 ]
        then
        echo "0 List_Backup_Red_"$BASE" result=0;1;2;0;2 OK - Encontrados = $BACKUP --- ARQUIVOS  $LISTAR  "
        exit 0

        elif [  $BACKUP -eq 1 ]
        then
        echo "1 List_Backup_Red_"$BASE" result=1;1;2;0;2 WARN - Qde Backup Insuficiente =$BACKUP --- ARQUIVOS  $LISTAR "
        exit 1


        elif [ $BACKUP -lt 1 ]
        then
        echo "2 List_Backup_Red_"$BASE" result=2;1;2;0;2 CRITICAL - Nenhum Backup Encontrado."
        exit 2

        else
        echo "3 List_Backup_Red_"$BASE" result=3;1;2;0;2 UNKNOWN - Erro ao tentar Encontrar backup"
        exit 3
        fi
{% endraw %}